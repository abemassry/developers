# vim: set et ts=2 sw=2 tw=80 :
name: Account
sort: 1
base_path: /account
description: >
  Account endpoints provide a means of viewing <a href="#object-profile">
  user profile objects</a>, as well as managing OAuth Clients and Tokens.
endpoints:
  account/profile:
    type: resource
    resource: account
    description: >
      Manage your user information.
    methods:
      GET:
        description: >
          Returns your user information.
        examples:
          curl: |
            curl https://$api_root/$version/account/profile
      PUT:
        description: >
          Edits your account profile.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: token $TOKEN" \
              -X PUT -d '{
                    "username": "jsmith",
                    "email": "jsmith@mycompany.com",
                    "timezone": "US/Eastern",
                    "email_notifications": true,
                    "ip_whitelist_enabled": true,
                    "lish_auth_method": "password_keys",
                    "authorized_keys": ""
                  }
                }' \
                https://$api_root/$version/account/profile
  account/profile/password:
    methods:
      POST:
        description: >
          Change your password.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: token $TOKEN" \
              -X POST -d '{
                  "password":"hunter7"
              }' \
              https://$api_root/$version/account/profile/password
  account/profile/tfa-enable:
    methods:
      POST:
        description: >
          Begin enabling TFA on your account.  Returns a two-factor secret
          that you must validate with the tfa-enable-confirm endpoint
          to require two-factor for future logins.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: token $TOKEN" \
              -X POST \
              https://$api_root/$version/account/profile/tfa-enable
  account/profile/tfa-enable-confirm:
    methods:
      POST:
        description: >
          Confirm your two-factor secret and require TFA for future logins.
        params:
          tfa_code:
            type: string
            description: >
              The code generated using the two-factor secret you got from tfa-enable
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: token $TOKEN" \
              -X POST -d '{
                "tfa_code": "123456"
              }' \
              https://$api_root/$version/account/profile/tfa-enable-confirm
  account/profile/tfa-disable:
    methods:
      POST:
        description: >
          Disable TFA on your account.  Future logins will not require TFA.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: token $TOKEN" \
              -X POST \
              https://$api_root/$version/account/profile/tfa-disable
  account/profile/grants:
    methods:
      GET:
        description: >
          Get grants for the current user.
        examples:
          curl: |
            curl -H "Authorization: token $TOKEN" \
                https://$api_root/$version/account/profile/grants
  account/tokens:
    type: list
    resource: oauthtoken
    description: >
      Manage OAuth Tokens created for your user.
    methods:
      GET:
        oauth: tokens:view
        description: >
          Get a list of all OAuth Tokens active for your user.  This includes first-party (manager) tokens,
          third-party OAuth Tokens, and Personal Access Tokens.
        examples:
          curl: |
            curl -H "Authorization: token $TOKEN" \
                https://$api_root/$version/account/tokens
      POST:
        oauth: tokens:create
        dangerous: true
        description: >
          Creates a new Personal Access Token for your user with the given scopes and expiry.  This token
          can subsequently be used to access the API and make any requests it has OAuth Scopes for.
        params:
          label:
            type: string
            value: my-token
            optional: true
            description: >
              The label for this Personal Access Token.  For your reference only.
          expiry:
            type: datetime
            value: 2017-12-31 01:00:00
            optional: true
            description: >
              If provided, when this Personal Access Token will expire.  If omitted, the resulting
              token will be valid until it is revoked.
          scopes:
            type: string
            value: linodes:view
            optional: true
            description: >
              The OAuth Scopes this token will be created with.  If omitted, the resulting token
              will have all OAuth Scopes.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X POST -d '{
                  "scopes": "linodes:view;domains:view"
                }' \
                https://$api_root/$version/account/tokens
  account/tokens/:id:
    type: resource
    resource: oauthtoken
    description: >
      Manage individual OAuth Tokens for your user.
    methods:
      GET:
        oauth: tokens:view
        description: >
          Get a single token.
        examples:
          curl: |
            curl -H "Authorization: token $TOKEN" \
                https://$api_root/$version/account/tokens/123
      PUT:
        oauth: tokens:modify
        description: >
          Edit a token's label.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X PUT -d '{
                  "label": "test-new-label"
                }' \
                https://$api_root/$version/account/tokens/123
      DELETE:
        oauth: tokens:delete
        description: >
          Expire an OAuth Token for your user.
        examples:
          curl: |
            curl -H "Authorization: token $TOKEN" \
                -X DELETE \
                https://$api_root/$version/account/tokens/123
  account/settings:
    type: resource
    resource: account
    description: >
      Manage your account settings.
    methods:
      GET:
        description: >
          Returns your account settings.
        examples:
          curl: |
            curl https://$api_root/$version/account/settings
      PUT:
        description: >
          Edits your account settings.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X PUT -d '{
                  "address_1": "123 Main St.",
                  "address_2": "Suite 101",
                  "city": "Philadelphia",
                  "company": "My Company, LLC",
                  "country": "US",
                  "email": "jsmith@mycompany.com",
                  "first_name": "John",
                  "last_name": "Smith",
                  "network_helper": true,
                  "phone": "555-555-1212",
                  "state": "PA",
                  "zip": 19102
                  }
                }' \
                https://$api_root/$version/account/settings
  account/clients:
    type: list
    resource: client
    authenticated: true
    description: >
      Manage the collection of OAuth client applications your account may access.
    methods:
      GET:
        oauth: clients:view
        description: >
          Returns a list of <a href="#object-client">clients</a>.
        examples:
          curl: |
            curl -H "Authorization; token $TOKEN" \
                https://$api_root/$version/account/clients
      POST:
        oauth: clients:create
        description: >
          Registers a new OAuth client application.
        params:
          name:
            description: A name for the new client application.
            type: string
            limit: "1-128 characters"
          redirect_uri:
            description: A URL to redirect to after the OAuth flow has completed.
            type: string
            limit: "1-512 characters"
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X POST -d '{
                    "name": "Example app",
                    "redirect_uri": "https://oauthreturn.example.org/",
                }' \
                https://$api_root/$version/account/clients
  account/clients/:id:
    type: resource
    resource: client
    authenticated: true
    description: >
      Manage a particular OAuth client application your account may access.
    methods:
      GET:
        oauth: clients:view
        description: >
          Returns information about this <a href="#object-client">OAuth client</a>.
        examples:
          curl: |
            curl -H "Authorization: token $TOKEN" \
                https://$api_root/$version/account/clients/$client_id
      PUT:
        oauth: clients:modify
        description: >
          Edits this <a href="#object-client">OAuth client</a>.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X PUT -d '{
                    "name": "Updated app name",
                    "redirect_uri": "https://newredirect.example.org/",
                }' \
                https://$api_root/$version/account/clients/$client_id
      DELETE:
        oauth: clients:delete
        dangerous: true
        description: >
          Delete this OAuth application. This action cannot be undone.
        examples:
          curl: |
            curl -H "Authorization: token $TOKEN" \
                -X DELETE \
                https://$api_root/$version/account/clients/$client_id
  account/clients/:id/reset_secret:
    type: action
    authenticated: true
    description: >
      Reset the OAuth application's client secret.
    methods:
      POST:
        oauth: clients:modify
        dangerous: true
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X POST \
                https://$api_root/$version/account/clients/$client_id/reset_secret
  account/clients/:id/thumbnail:
    type: action
    authenticated: true
    description: >
      Manage the OAuth application's thumbnail image.
    methods:
      GET:
        oauth: clients:view
        description: >
          Retrieve the OAuth application's current thumbnail image.
        examples:
          curl: |
            curl -H "Authorization: token $TOKEN" \
                https://$api_root/$version/account/clients/$client_id/thumbnail
      PUT:
        oauth: clients:modify
        description: >
          Set or update the OAuth application's thumbnail image.
          If the image is larger than 128x128 it will be scaled down.
        examples:
          curl: |
            curl -H "Content-Type: image/png" \
                -H "Authorization: token $TOKEN" \
                -X PUT \
                --data-binary "@/path/to/image"
                https://$api_root/$version/account/clients/$client_id/thumbnail
  account/users:
    type: list
    resource: account
    description: >
      Returns a list of <a href="#object-user">User objects</a> associated with your account.
    methods:
      GET:
        examples:
          curl: |
            curl https://$api_root/$version/account/users
      POST:
        description: >
          Creates a new user.
        params:
          username:
            type: string
            description: The username for the new user.
          email:
            type: string
            description: The user's email.
          password:
            type: string
            description: The user's password.
          restricted:
            optinoal: true
            type: bool
            description: If false, this user has access to the entire account.  Defaults to true.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X POST -d '{
                    "username": "testguy",
                    "password": "hunter7",
                    "email": "testguy@linode.com"
                }' \
                https://$api_root/$version/account/users
  account/users/:username:
    type: resource
    resource: account
    description: >
      Returns information about a specific user associated with your account.
    methods:
      GET:
        examples:
          curl: |
            curl https://$api_root/$version/account/users/$username
      PUT:
        description: >
          Update a user.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X PUT -d '{
                    "email": "newemail@linode.com"
                  }
                }' \
                https://$api_root/$version/account/users/testguy
      DELETE:
        description: >
          Deletes a user.  May not delete the last unrestricted user on the account.
        examples:
          curl: |
            curl -H "Authorization: token $TOKEN" \
                -X DELETE \
                https://$api_root/$version/account/users/testguy
  account/users/:username/password:
    type: action
    description: >
      Update a user's password
    methods:
      POST:
        params:
          password:
            type: string
            description: The user's new password.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X POST -d '{
                    "password": "hunter7",
                }' \
                https://$api_root/$version/account/users/testguy/password
  account/users/:username/grants:
    type: resource
    resource: usergrants
    description: >
      Manage grants for restricted users.  It is an error to call this endpoint for unrestrcited users.  Only unrestricted
      users may access this endpoint.
    methods:
      GET:
        description: Get grants for a restricted user.
        examples:
          curl: |
            curl -H "Authorization: token $TOKEN" \
                https://$api_root/$version/account/users/testguy/grants
      PUT:
        description: >
          Update grants for a restricted user.
        examples:
          curl: |
            curl -H "Authorization: token $TOKEN" \
                -X PUT -d '{
                    "global": {
                        "add_linodes": true
                    }
                }' \
                https://$api_root/$version/account/users/testguy/grants
